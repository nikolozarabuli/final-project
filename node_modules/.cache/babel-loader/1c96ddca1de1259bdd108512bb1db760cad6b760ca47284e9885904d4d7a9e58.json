{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Giorgi Zhonzholadze\\\\Desktop\\\\finaluri preoqti\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport useApiData from \"../hooks/useApiData\";\n\n// Coordinates for some Georgian cities (add more as needed)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cityCoordinates = {\n  \"Tbilisi\": {\n    latitude: 41.7151,\n    longitude: 44.8271\n  },\n  \"Batumi\": {\n    latitude: 41.6168,\n    longitude: 41.6367\n  },\n  \"Kutaisi\": {\n    latitude: 42.2500,\n    longitude: 42.7000\n  }\n};\nfunction Home() {\n  _s();\n  const [selectedCity, setSelectedCity] = useState(\"Tbilisi\");\n  const [weather, setWeather] = useState(null);\n  const [weatherLoading, setWeatherLoading] = useState(false);\n  const [weatherError, setWeatherError] = useState(\"\");\n\n  // Posts from JSONPlaceholder (demo content)\n  const {\n    data: posts,\n    loading: postsLoading,\n    error: postsError\n  } = useApiData(\"/posts?_limit=5\");\n\n  // Fetch weather using Open-Meteo\n  const fetchWeather = async city => {\n    setWeatherLoading(true);\n    setWeatherError(\"\");\n    setWeather(null);\n    try {\n      const coords = cityCoordinates[city];\n      const url = `https://api.open-meteo.com/v1/forecast?latitude=${coords.latitude}&longitude=${coords.longitude}&current_weather=true`;\n      const res = await fetch(url);\n      if (!res.ok) throw new Error(\"Weather API error\");\n      const data = await res.json();\n      setWeather(data.current_weather);\n    } catch (err) {\n      setWeatherError(\"Failed to fetch weather data.\");\n    }\n    setWeatherLoading(false);\n  };\n\n  // Fetch on city change\n  useEffect(() => {\n    fetchWeather(selectedCity);\n  }, [selectedCity]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginBottom: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weather (Open-Meteo)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select city:\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCity,\n          onChange: e => setSelectedCity(e.target.value),\n          children: Object.keys(cityCoordinates).map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city,\n            children: city\n          }, city, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), weatherLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading weather...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 28\n      }, this), weatherError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: weatherError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 26\n      }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", weather.temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Wind speed: \", weather.windspeed, \" km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Weather code: \", weather.weathercode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Latest Posts (from API):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), postsLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 26\n      }, this), postsError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: postsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts && posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"XWGkMFXIVxDaczVKN4I+cLRBITM=\", false, function () {\n  return [useApiData];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useApiData","jsxDEV","_jsxDEV","cityCoordinates","latitude","longitude","Home","_s","selectedCity","setSelectedCity","weather","setWeather","weatherLoading","setWeatherLoading","weatherError","setWeatherError","data","posts","loading","postsLoading","error","postsError","fetchWeather","city","coords","url","res","fetch","ok","Error","json","current_weather","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","value","onChange","e","target","Object","keys","map","color","temperature","windspeed","weathercode","post","title","body","id","_c","$RefreshReg$"],"sources":["C:/Users/Giorgi Zhonzholadze/Desktop/finaluri preoqti/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useApiData from \"../hooks/useApiData\";\r\n\r\n// Coordinates for some Georgian cities (add more as needed)\r\nconst cityCoordinates = {\r\n  \"Tbilisi\": { latitude: 41.7151, longitude: 44.8271 },\r\n  \"Batumi\": { latitude: 41.6168, longitude: 41.6367 },\r\n  \"Kutaisi\": { latitude: 42.2500, longitude: 42.7000 },\r\n};\r\n\r\nfunction Home() {\r\n  const [selectedCity, setSelectedCity] = useState(\"Tbilisi\");\r\n  const [weather, setWeather] = useState(null);\r\n  const [weatherLoading, setWeatherLoading] = useState(false);\r\n  const [weatherError, setWeatherError] = useState(\"\");\r\n\r\n  // Posts from JSONPlaceholder (demo content)\r\n  const { data: posts, loading: postsLoading, error: postsError } = useApiData(\"/posts?_limit=5\");\r\n\r\n  // Fetch weather using Open-Meteo\r\n  const fetchWeather = async (city) => {\r\n    setWeatherLoading(true);\r\n    setWeatherError(\"\");\r\n    setWeather(null);\r\n    try {\r\n      const coords = cityCoordinates[city];\r\n      const url = `https://api.open-meteo.com/v1/forecast?latitude=${coords.latitude}&longitude=${coords.longitude}&current_weather=true`;\r\n      const res = await fetch(url);\r\n      if (!res.ok) throw new Error(\"Weather API error\");\r\n      const data = await res.json();\r\n      setWeather(data.current_weather);\r\n    } catch (err) {\r\n      setWeatherError(\"Failed to fetch weather data.\");\r\n    }\r\n    setWeatherLoading(false);\r\n  };\r\n\r\n  // Fetch on city change\r\n  useEffect(() => {\r\n    fetchWeather(selectedCity);\r\n  }, [selectedCity]);\r\n\r\n  return (\r\n    <main>\r\n      <h1>Home Page</h1>\r\n\r\n      <section style={{ marginBottom: \"2rem\" }}>\r\n        <h2>Weather (Open-Meteo)</h2>\r\n        <label>\r\n          Select city:{\" \"}\r\n          <select value={selectedCity} onChange={e => setSelectedCity(e.target.value)}>\r\n            {Object.keys(cityCoordinates).map(city => (\r\n              <option key={city} value={city}>{city}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        {weatherLoading && <p>Loading weather...</p>}\r\n        {weatherError && <p style={{ color: \"red\" }}>{weatherError}</p>}\r\n        {weather && (\r\n          <div>\r\n            <p>Temperature: {weather.temperature}Â°C</p>\r\n            <p>Wind speed: {weather.windspeed} km/h</p>\r\n            <p>Weather code: {weather.weathercode}</p>\r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n      <section>\r\n        <h2>Latest Posts (from API):</h2>\r\n        {postsLoading && <p>Loading...</p>}\r\n        {postsError && <p style={{ color: \"red\" }}>{postsError}</p>}\r\n        <ul>\r\n          {posts &&\r\n            posts.map((post) => (\r\n              <li key={post.id}>\r\n                <b>{post.title}</b>\r\n                <p>{post.body}</p>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}